// GamepadFPV.js â€” controller-only movement + look
import * as THREE from 'three';
export class GamepadFPV extends THREE.Object3D{constructor(t){super(),this.camera=t,this.add(this.camera),this.camera.position.set(0,1.6,0),this.rotation.order="YXZ",this.speed=6,this.flySpeed=4,this.lookSpeed=1.8,this._yaw=0,this._pitch=0,this._lastButtons=[]}getGamepad(){const t=navigator.getGamepads?.()||[];for(const s of t)if(s&&s.connected)return s;return null}isDown(t){const s=this.getGamepad();return s?!!s.buttons[t]?.pressed:!1}update(t){const s=this.getGamepad(),e=s?s.axes:[0,0,0,0],i=dz(e[0]),o=dz(e[1]),h=dz(e[2]),r=dz(e[3]);this._yaw-=h*this.lookSpeed*t,this._pitch-=r*this.lookSpeed*t,this._pitch=Math.max(-Math.PI/2+.01,Math.min(Math.PI/2-.01,this._pitch)),this.rotation.set(this._pitch,this._yaw,0,"YXZ");const a=new THREE.Vector3(0,0,-1).applyQuaternion(this.quaternion),n=new THREE.Vector3(1,0,0).applyQuaternion(this.quaternion);a.y=0,n.y=0,a.normalize(),n.normalize();const c=new THREE.Vector3;c.addScaledVector(n,i*this.speed),c.addScaledVector(a,-o*this.speed),this.isDown(0)&&(c.y+=this.flySpeed),this.isDown(2)&&(c.y-=this.flySpeed),this.position.addScaledVector(c,t)}}function dz(t,s=.12){return Math.abs(t)<s?0:t}
